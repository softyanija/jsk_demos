;; (send *baxter* :angle-vector (send *ri* :state :potentio-vector))
(load "package://eus_vive/euslisp/lib/baxter-interface.l")
(load "package://assemble_table_baxter/euslisp/parameters.l")
(eus_vive::baxter-init :lgripper :softhand :rgripper :softhand)
(objects (list *baxter*))

(send *ri* :start-grasp :larm :rotate-angle (* pi -0.5))
(unix:sleep 1)
(send *baxter* :angle-vector *rotate-table-init*)
(send *baxter* :larm :inverse-kinematics *larm-rotate-table-1*)
(send *baxter* :larm :move-end-pos #f(-120 0 0))
(send *ri* :angle-vector (send *baxter* :angle-vector) 3000)
(send *ri* :wait-interpolation)

(send *baxter* :larm :inverse-kinematics *larm-rotate-table-1*)
(send *baxter* :larm :move-end-pos #f(20 0 0))
(send *ri* :angle-vector (send *baxter* :angle-vector) 2000)
(send *ri* :wait-interpolation)

(send *ri* :start-grasp :rarm :rotate-angle (* pi 0.3))
(unix:sleep 2)

(send *baxter* :rarm :inverse-kinematics *rarm-rotate-table-1*)
(send *baxter* :larm :inverse-kinematics *larm-rotate-table-2*)
(send *baxter* :larm :move-end-pos #f(20 0 0))
(send *ri* :angle-vector (send *baxter* :angle-vector) 3000)
(send *ri* :wait-interpolation)

(send *baxter* :larm :inverse-kinematics *larm-rotate-table-2*)
(send *baxter* :larm :move-end-pos #f(-120 0 0))
(send *ri* :angle-vector (send *baxter* :angle-vector) 3000)
(send *ri* :wait-interpolation)

(send *baxter* :larm :inverse-kinematics *larm-rotate-table-1*)
(send *baxter* :larm :move-end-pos #f(-120 0 0))
(send *ri* :angle-vector (send *baxter* :angle-vector) 2000)
(send *ri* :wait-interpolation)

(send *ri* :stop-grasp :larm)
(unix:sleep 2)
(send *ri* :start-grasp :larm :rotate-angle (* pi -0.5))
(send *ri* :start-grasp :rarm :rotate-angle (* pi 0.3))
(unix:sleep 2)

(send *baxter* :larm :inverse-kinematics *larm-rotate-table-1*)
(send *baxter* :larm :move-end-pos #f(20 0 0))
(send *ri* :angle-vector (send *baxter* :angle-vector) 3000)
(send *ri* :wait-interpolation)

(send *baxter* :rarm :inverse-kinematics *rarm-rotate-table-2*)
(send *baxter* :larm :inverse-kinematics *larm-rotate-table-2*)
(send *baxter* :larm :move-end-pos #f(20 0 0))
(send *ri* :angle-vector (send *baxter* :angle-vector) 3000)
(send *ri* :wait-interpolation)

(send *baxter* :larm :inverse-kinematics *larm-rotate-table-2*)
(send *baxter* :larm :move-end-pos #f(-120 0 0))
(send *ri* :angle-vector (send *baxter* :angle-vector) 2000)
(send *ri* :wait-interpolation)
