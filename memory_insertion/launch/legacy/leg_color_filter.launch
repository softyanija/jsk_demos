<!-- -*- mode: xml -*- -->
<launch>
  <!--
  $ roslaunch openni_launch openni.launch    ;; start kinect camera
  $ rosrun rqt_reconfigure rqt_reconfigure   ;; parameter settings
  $ roslaunch jsk_pcl_ros hsi_color_filter.launch DEFAULT_NAMESPACE:=/camera/depth_registered INPUT:=points
  
  * subscribe camera/depth_registered/hsi_output
  * subscribe tf and find /target
  -->
  <arg name="INPUT" default="/attention_table/output/pointcloud"/>
  <arg name="CENTROID_FRAME" default="target"/>
  <arg name="DEFAULT_NAMESPACE" default="HSI_color_filter"/>
  <arg name="FILTER_NAME_SUFFIX" default=""/>
  <arg name="OUTPUT" default="hsi_output$(arg FILTER_NAME_SUFFIX)"/>

  <arg name="h_max" default="123"/>
  <arg name="h_min" default="83" />
  <arg name="s_max" default="103" />
  <arg name="s_min" default="30" />
  <arg name="i_max" default="148" />
  <arg name="i_min" default="112" />

  <arg name="create_manager" default="true" />
  <arg name="manager" default="hsi_filter_manager$(arg FILTER_NAME_SUFFIX)" />

  <group ns="$(arg DEFAULT_NAMESPACE)">
    <node if="$(arg create_manager)"
          pkg="nodelet" type="nodelet" name="$(arg manager)"
          args="manager" output="screen"/>

  <!--
    <node pkg="nodelet" type="nodelet" name="hsi_filter$(arg FILTER_NAME_SUFFIX)"
          args="load jsk_pcl/HSIColorFilter $(arg manager)" output="screen">
-->
    <node pkg="nodelet" type="nodelet" name="hsi_filter$(arg FILTER_NAME_SUFFIX)"
          args="standalone jsk_pcl/HSIColorFilter" output="screen">
      <remap from="~input" to="$(arg INPUT)" />
      <remap from="~output" to="$(arg OUTPUT)" />
      <rosparam>
        use_indices: false
        keep_organized: true
      </rosparam>
      <param name="h_limit_max" value="$(arg h_max)" />
      <param name="h_limit_min" value="$(arg h_min)" />
      <param name="s_limit_max" value="$(arg s_max)" />
      <param name="s_limit_min" value="$(arg s_min)" />
      <param name="i_limit_max" value="$(arg i_max)" />
      <param name="i_limit_min" value="$(arg i_min)" />
    </node>

    <!--
    <node pkg="nodelet" type="nodelet" name="euclidean_clustering$(arg FILTER_NAME_SUFFIX)"
          args="load jsk_pcl/EuclideanClustering $(arg manager)" output="screen">
-->
    <node pkg="nodelet" type="nodelet" name="euclidean_clustering$(arg FILTER_NAME_SUFFIX)"
          args="standalone jsk_pcl/EuclideanClustering" output="screen">
      <remap from="~input" to="$(arg OUTPUT)" />
      <rosparam>
        tolerance: 0.02
        min_size: 15
      </rosparam>
    </node>

    <!--
    <node pkg="nodelet" type="nodelet"
          name="cluster_decomposer$(arg FILTER_NAME_SUFFIX)"
          args="load jsk_pcl/ClusterPointIndicesDecomposerZAxis $(arg manager)"
          output="screen" clear_params="true">
-->
    <node pkg="nodelet" type="nodelet"
          name="cluster_decomposer$(arg FILTER_NAME_SUFFIX)"
          args="standalone jsk_pcl/ClusterPointIndicesDecomposerZAxis"
          output="screen" clear_params="true">
      <remap from="~input" to="$(arg OUTPUT)" />
      <remap from="~align_planes" to="/multi_plane_estimate/output_polygon" />
      <remap from="~align_planes_coefficients" to="/multi_plane_estimate/output_coefficients" />
      <remap from="~target" to="euclidean_clustering$(arg FILTER_NAME_SUFFIX)/output" />
      <remap from="~debug_output" to="debug_output$(arg FILTER_NAME_SUFFIX)" />
      <remap from="~boxes" to="boxes$(arg FILTER_NAME_SUFFIX)" />
      <rosparam>
        approximate_sync: True
        publish_tf: True
        align_boxes: True
        align_boxes_with_plane: True
      </rosparam>
      <param name="use_pca" value="True" />
    </node>


  </group>

</launch>
